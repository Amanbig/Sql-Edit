name: Desktop Build (Windows, macOS, Linux)

on:
  push:
    branches: [ main, develop ]
    paths: [ 'pubspec.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'pubspec.yaml' ]
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.version-check.outputs.changed }}
      current-version: ${{ steps.version-check.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version change
        id: version-check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get current version
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)

          # Get previous version
          git checkout HEAD~1 -- pubspec.yaml 2>/dev/null || echo "No previous version"
          PREVIOUS_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 2>/dev/null || echo "0.0.0")

          # Reset to current version
          git checkout HEAD -- pubspec.yaml

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
  windows:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows installer
        run: |
          # Create a simple zip package
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath build/windows/sql_edit-windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: build/windows/sql_edit-windows.zip

  macos:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build macOS app
        run: flutter build macos --release

      - name: Create macOS DMG
        run: |
          # Create a simple zip package for now
          cd build/macos/Build/Products/Release/
          zip -r sql_edit-macos.zip sql_edit.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/sql_edit-macos.zip

  linux:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Linux app
        run: flutter build linux --release

      - name: Create Linux package
        run: |
          cd build/linux/x64/release/bundle/
          tar -czf sql_edit-linux.tar.gz *

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: build/linux/x64/release/bundle/sql_edit-linux.tar.gz
