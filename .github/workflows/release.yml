# .github/workflows/flutter-build.yml
name: Flutter Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
      current_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //' | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Get previous version
        id: prev_version
        run: |
          git fetch --tags
          PREV_VERSION=$(git tag --sort=-v:refname | head -n 1 || echo "0.0.0")
          echo "prev=$PREV_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $PREV_VERSION"

      - name: Check if version changed
        id: check
        run: |
          CURRENT="${{ steps.get_version.outputs.version }}"
          PREVIOUS="${{ steps.prev_version.outputs.prev }}"
          if [ "$CURRENT" != "$PREVIOUS" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS to $CURRENT"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT"
          fi

  build-android:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Build App Bundle
        run: flutter build appbundle --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ needs.check-version.outputs.current_version }}
          path: build/app/outputs/flutter-apk/app-release.apk
      
      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab-${{ needs.check-version.outputs.current_version }}
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build iOS (No Codesign)
        run: flutter build ios --release --no-codesign
      
      - name: Upload iOS Build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-${{ needs.check-version.outputs.current_version }}
          path: build/ios/iphoneos/

  build-windows:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Create Windows Installer (Optional with Inno Setup)
        run: |
          echo "Add Inno Setup script here if needed"
      
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-${{ needs.check-version.outputs.current_version }}
          path: build/windows/x64/runner/Release/

  build-macos:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build macOS
        run: flutter build macos --release
      
      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-${{ needs.check-version.outputs.current_version }}
          path: build/macos/Build/Products/Release/

  build-linux:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build Linux
        run: flutter build linux --release
      
      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-${{ needs.check-version.outputs.current_version }}
          path: build/linux/x64/release/bundle/

  create-release:
    needs: [check-version, build-android, build-ios, build-windows, build-macos, build-linux]
    if: needs.check-version.outputs.version_changed == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.current_version }}
          name: Release v${{ needs.check-version.outputs.current_version }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}