name: Flutter Multi-Platform Build

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Version Check
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
      current_version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comparison

      - name: Check if version changed
        id: check
        run: |
          # Get current version from pubspec.yaml
          CURRENT_VERSION=$(grep "^version:" pubspec.yaml | sed 's/version: *//')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this is a tag push (skip version check for tags)
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Tag push detected, skipping version check"
            exit 0
          fi
          
          # Get previous version from last commit
          git checkout HEAD~1 2>/dev/null || echo "No previous commit"
          PREVIOUS_VERSION=$(grep "^version:" pubspec.yaml 2>/dev/null | sed 's/version: *//' || echo "none")
          git checkout -
          
          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"
          
          # Compare versions
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "⚠️ Version not changed (still $CURRENT_VERSION)"
            echo "Please update the version in pubspec.yaml to trigger builds"
          fi

  # Android Build
  build-android:
    needs: version-check
    if: needs.version-check.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  # iOS Build
  build-ios:
    needs: version-check
    if: needs.version-check.outputs.version_changed == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign

      - name: Create iOS Archive
        run: |
          cd build/ios/iphoneos
          zip -r $GITHUB_WORKSPACE/ios-build.zip Runner.app

      - name: Upload iOS Build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios-build.zip

  # Windows Build
  build-windows:
    needs: version-check
    if: needs.version-check.outputs.version_changed == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Build Windows
        run: flutter build windows --release

      - name: Archive Windows Build
        run: |
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath windows-release.zip

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: windows-release.zip

  # macOS Build
  build-macos:
    needs: version-check
    if: needs.version-check.outputs.version_changed == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop

      - name: Build macOS
        run: flutter build macos --release

      - name: Archive macOS Build
        run: |
          cd build/macos/Build/Products/Release
          zip -r macos-release.zip *.app
          mv macos-release.zip $GITHUB_WORKSPACE/

      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: macos-release.zip

  # Linux Build
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop

      - name: Build Linux
        run: flutter build linux --release

      - name: Archive Linux Build
        run: |
          cd build/linux/x64/release/bundle
          tar -czf $GITHUB_WORKSPACE/linux-release.tar.gz *

      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: linux-release.tar.gz

  # Web Build
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Archive Web Build
        run: |
          cd build/web
          tar -czf $GITHUB_WORKSPACE/web-release.tar.gz *

      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web-release.tar.gz

  # Create GitHub Release (only on tags)
  release:
    needs: [build-android, build-ios, build-windows, build-macos, build-linux, build-web]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/android-apk/app-release.apk
            artifacts/android-appbundle/app-release.aab
            artifacts/ios-build/ios-build.zip
            artifacts/windows-build/windows-release.zip
            artifacts/macos-build/macos-release.zip
            artifacts/linux-build/linux-release.tar.gz
            artifacts/web-build/web-release.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
