name: Mobile Build (Android & iOS)

on:
  push:
    branches: [ main, develop ]
    paths: [ 'pubspec.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'pubspec.yaml' ]
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.version-check.outputs.changed }}
      current-version: ${{ steps.version-check.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version change
        id: version-check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get current version
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)

          # Get previous version
          git checkout HEAD~1 -- pubspec.yaml 2>/dev/null || echo "No previous version"
          PREVIOUS_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 2>/dev/null || echo "0.0.0")

          # Reset to current version
          git checkout HEAD -- pubspec.yaml

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

  android:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  ios:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS (no signing)
        run: flutter build ios --release --no-codesign

      - name: Create iOS Archive
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath Runner.xcarchive \
            archive \
            CODE_SIGNING_ALLOWED=NO

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: ios/Runner.xcarchive
